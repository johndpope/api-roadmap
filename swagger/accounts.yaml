swagger: "2.0"
info:
    description: "TransferWise API V2 - Accounts"
    version: "2.0.0"
    title: "Transferwise API"
    contact:
        email: "api@transferwise.com"
host: "api.transferwise.com"
basePath: "/v2"
schemes:
- "https"
securityDefinitions:
    BearerToken:
        type: apiKey
        name: Authorization
        in: header

tags:
- name: Accounts
  description: Beneficiary Accounts

paths:
    #+------------------------------------------+#
    #+------------------------------------------+#
    #|                                          |#
    #|                ACCOUNTS                  |#
    #|                                          |#
    #+------------------------------------------+#
    #+------------------------------------------+#
    '/account-types': #BOOKMARK
        get:
            tags:
            - Accounts
            summary: Lists all available beneficiary account type names
            operationId: list-account-types
            produces:
            - application/json;charset=UTF-8
            responses:
                '200':
                    description: OK
                    schema:
                        type: array
                        items:
                            type: string
                '401':
                    description: Unauthorized
                '403':
                    description: Forbidden
                '404':
                    description: Not Found
    '/profiles/{profileId}/accounts':
        get:
            tags:
            - Accounts
            summary: Search v2 account by given criteria
            operationId: search-or-list
            produces:
            - application/json;charset=UTF-8
            security:
            - BearerToken: []
            parameters:
            - name: profileId
              in: path
              required: true
              type: integer
              format: int64
            - name: currency
              in: query
              required: false
              type: array
              items:
                  type: string
              collectionFormat: multi
            - name: type
              in: query
              required: false
              type: array
              items:
                  type: string
              collectionFormat: multi
            - name: creatorId
              in: query
              required: false
              type: integer
              format: int64
            - name: active
              in: query
              required: false
              type: boolean
            - name: unreserved
              in: query
              required: false
              type: boolean
            - name: fullName
              in: query
              required: false
              type: string
            - name: ownedByCustomer
              in: query
              required: false
              type: boolean
            responses:
                '200':
                    description: OK
                    schema:
                        $ref: '#/definitions/Page'
                '401':
                    description: Unauthorized
                '403':
                    description: Forbidden
                '404':
                    description: Profile Not Found
        post:
            tags:
            - Accounts
            summary: Creates beneficiary account
            operationId: create-account
            consumes:
            - application/json
            produces:
            - application/json;charset=UTF-8
            security:
            - BearerToken: []
            parameters:
            - name: profileId
              in: path
              required: true
              type: integer
              format: int64
            - in: body
              name: account
              description: account
              required: true
              schema:
                  $ref: '#/definitions/CreateAccountPayload'
            responses:
                '200':
                    description: OK
                    schema:
                        $ref: '#/definitions/Account'
                '201':
                    description: Created
                '400':
                    description: Client input errors
                    schema:
                        $ref: '#/definitions/Errors'
                '401':
                    description: Unauthorized
                '403':
                    description: Forbidden
    '/profiles/{profileId}/accounts/{id}':
        get:
            tags:
            - Accounts
            summary: Return v2 account by id for public consumers
            operationId: show-account
            produces:
            - application/json;charset=UTF-8
            security:
            - BearerToken: []
            parameters:
            - name: profileId
              in: path
              required: true
              type: integer
              format: int64
            - name: id
              in: path
              description: id
              required: true
              type: integer
              format: int64
            responses:
                '200':
                    description: OK
                    schema:
                        $ref: '#/definitions/Account'
                '401':
                    description: Unauthorized
                '403':
                    description: Forbidden
                '404':
                    description: Not Found
        delete:
            tags:
            - Accounts
            summary: Remove beneficiary account with given id
            operationId: delete-account
            produces:
            - application/json;charset=UTF-8
            security:
            - BearerToken: []
            parameters:
            - name: profileId
              in: path
              required: true
              type: integer
              format: int64
            - name: id
              in: path
              description: id
              required: true
              type: integer
              format: int64
            responses:
                '200':
                    description: OK
                    schema:
                        $ref: '#/definitions/Account'
                '204':
                    description: No Content
                '401':
                    description: Unauthorized
                '403':
                    description: Forbidden
    '/profiles/{profileId}/quotes/{quoteId}/account-requirements':
        get:
            tags:
            - Accounts
            summary: Get the structure of the form to render on a client to allow a user to create a recipient account for this quote
            description: This endpoint will return a JSON Schema response containing a JSON object that describes the components of a form to be rendered in order to collect recipient details for submission to `POST /profiles/{profileId}/accounts`. The object will aways contain one field which has three potential fiels - `allOf`, `oneOf` or `type`. The first two will contain arrays of other objects of the same format as these. An object with a `type` field should be handled according to the type defined there. Please see the trandferwise API v2 documentation for exampeles of this response and how to render a form using it.
            operationId: get-account-details
            produces:
            - application/schema+json;charset=UTF-8
            security:
            - BearerToken: []
            parameters:
            - name: profileId
              in: path
              description: Profile ID
              required: true
              type: integer
              format: int64
            - name: quoteId
              in: path
              description: Quote ID
              required: true
              type: integer
              format: int64
            responses:
                '200':
                    description: OK - JSON Schema response
                '401':
                    description: Unauthorized
                '403':
                    description: Forbidden
                '404':
                    description: Not Found
        post:
            tags:
            - Accounts
            summary: Post a partially completed form to get the full contents of the form to show the user.
            description: Post a partially completed form as defined by the fields required in `GET /profiles/{profileId}/quotes/{quoteId}/account-requirements`. Designed to allow submission of data where fields in the recipient creation form are multi-level or dependent on each other, e.g. Country -> State. The response is the same JSON schema format as returned by the `GET` endpoint but with potentially more form fields defined in the response.
            operationId: post-account-details
            consumes:
            - application/json
            produces:
            - application/schema+json;charset=UTF-8
            security:
            - BearerToken: []
            parameters:
            - name: profileId
              in: path
              required: true
              type: integer
              format: int64
            - name: quoteId
              in: path
              description: Quote ID
              required: true
              type: integer
              format: int64
            - in: body
              name: account
              description: account
              required: true
              schema:
                  $ref: '#/definitions/CreateAccountPayload'
            responses:
                '200':
                    description: OK - JSON Schema response
                '204':
                    description: No Content
                '401':
                    description: Unauthorized
                '403':
                    description: Forbidden


#+------------------------------------------+#
#|..........................................|#
#|                                          |#
#|               DEFINITIONS                |#
#|                                          |#
#|..........................................|#
#+------------------------------------------+#
definitions:
    CreateAccountPayload:
        type: object
        title: CreateAccountPayload
        description: The fields required here are defined by the `account-details` endpoints, this is an example of what could be submitted. You should not model this object but directly pass through what is submitted by your client, without parsing it. This is because the contents could change dynamically as our requirements change.
        properties: &CreateAccountPayload
            active:
                type: boolean
            address:
                $ref: '#/definitions/Address'
            country:
                type: string
            creatorId:
                type: integer
                format: int64
            currency:
                type: string
            dateOfBirth:
                type: string
                format: date
            details:
                type: object
                additionalProperties:
                    type: string
            email:
                type: string
            hash:
                type: string
            id:
                type: integer
                format: int64
            legalEntityType:
                type: string
                enum:
                - PERSON
                - INSTITUTION
            name:
                $ref: '#/definitions/Name'
            ownedByCustomer:
                type: boolean
            type:
                type: string
    Account:
        type: object
        title: Account
        properties:
            <<: *CreateAccountPayload
            profileId:
                type: integer
                format: int64
    Address:
        type: object
        properties:
            city:
                type: string
            country:
                type: string
            firstLine:
                type: string
            postCode:
                type: string
            state:
                type: string
        title: Address
    BankDetails:
        type: object
        properties:
            bankCode:
                type: string
            bic:
                type: string
            branchAddress:
                $ref: '#/definitions/Address'
            country:
                type: string
            metadata:
                $ref: '#/definitions/BankDetailsMetadata'
            name:
                type: string
            shortName:
                type: string
            usedInRecipient:
                type: boolean
            usedInternally:
                type: boolean
        title: BankDetails
    BankDetailsMetadata:
        type: object
        properties:
            accountNumberValidationRegExp:
                type: string
            clearingHouses:
                type: array
                items:
                    type: string
            inrTransferTypes:
                type: array
                items:
                    type: string
            instantWhitelist:
                type: boolean
            lkrDefaultBranchCode:
                type: string
            moneywaveBankCode:
                type: string
            skipInWorldpay:
                type: boolean
            supportedByBarclays:
                type: boolean
            supportedByInstaDebit:
                type: boolean
            unionpayValidationRules:
                $ref: '#/definitions/ChineseCardPrefixes'
            wsftsBankCode:
                type: string
        title: BankDetailsMetadata
    ChineseCardPrefixes:
        type: object
        properties:
            prefixes:
                type: array
                items:
                    type: string
        title: ChineseCardPrefixes
    CommonFieldMap:
        type: object
        properties:
            accountNumberField:
                type: string
            bankCodeField:
                type: string
            bicField:
                type: string
            branchCodeField:
                type: string
        title: CommonFieldMap
    Name:
        type: object
        properties:
            familyName:
                type: string
            fullName:
                type: string
            givenName:
                type: string
            middleNames:
                type: array
                items:
                    type: string
            patronymicName:
                type: string
        title: Name
    Page:
        type: object
        properties:
            content:
                type: array
                items:
                    type: object
            first:
                type: boolean
            last:
                type: boolean
            number:
                type: integer
                format: int32
            numberOfElements:
                type: integer
                format: int32
            pageable:
                $ref: '#/definitions/Pageable'
            size:
                type: integer
                format: int32
            sort:
                $ref: '#/definitions/Sort'
            totalElements:
                type: integer
                format: int64
            totalPages:
                type: integer
                format: int32
        title: Page
    Pageable:
        type: object
        properties:
            offset:
                type: integer
                format: int64
            pageNumber:
                type: integer
                format: int32
            pageSize:
                type: integer
                format: int32
            paged:
                type: boolean
            sort:
                $ref: '#/definitions/Sort'
            unpaged:
                type: boolean
        title: Pageable
    Sort:
        type: object
        properties:
            sorted:
                type: boolean
            unsorted:
                type: boolean
        title: Sort
    Error:
        type: object
        properties:
            code:
                type: string
                description: Error code
            message:
                description: Human readable error message
                type: string
            arguments:
                description: Error arguments
                type: array
                items:
                    type: string
            path:
                type: string
    Errors:
        type: object

        properties:
            errors:
                type: array
                items:
                    $ref: "#/definitions/Error"
